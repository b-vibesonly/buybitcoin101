---
// Header.astro
// Simple header component with logo
export interface Props {
  showDonation?: boolean;
}

const { showDonation = false } = Astro.props;
---

<header class="header">
  <div class="logo-container">
    <a href="/" class="logo-link">
      <img
        src="/images/b101-trimmed.png"
        alt="Bitcoin hero image"
        class="logo"
        loading="eager"
        width="400"
        height="240"
      />
    </a>
    {
      showDonation && (
        <div class="donation-address">
          <div class="btc-address" id="btc-address" title="Click to copy Bitcoin address">
            bc1qprx3e7uschjqzr5adxx85z8um8pjlqy92gqq9l
          </div>
          <div class="nostr-address">
            <div class="nostr-text">
              npub1hddv0a35pj02qu9s23ylnefps0etxkszzq5222u65v0l3elcymrsgfu32z
            </div>
          </div>
        </div>
      )
    }
  </div>
</header>

<style>
  .header {
    width: 100%;
    background-color: var(--color-bg);
    position: relative;
    border-bottom: 1px solid var(--color-border);
  }

  .logo-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: var(--header-height);
    padding: 0;
    gap: var(--spacing-sm);
    max-width: var(--max-width);
    margin: 0 auto;
  }

  .logo-link {
    text-decoration: none;
    display: inline-block;
    transition: var(--transition);
    padding: 0;
    border-radius: var(--border-radius);
  }

  .logo-link:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .logo-link:hover {
    transform: translateY(-2px);
  }

  .logo {
    height: auto;
    width: auto;
    max-width: min(95%, 450px);
    max-height: 140px;
    object-fit: contain;
    object-position: center;
    display: block;
    margin: 0 auto;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
  }

  .donation-address {
    text-align: center;
    margin: var(--spacing-sm) 0;
    color: var(--color-text-light);
    font-size: 0.85rem;
    padding: 0 var(--spacing-sm);
    width: 100%;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .btc-address {
    font-family: var(--font-mono);
    color: #aaa; /* Light gray color */
    font-size: 0.65rem;
    letter-spacing: 0.2px;
    text-align: center;
    white-space: nowrap;
    display: inline-block;
    margin-bottom: 0.25rem;
    cursor: pointer;
    transition: color 0.2s ease;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.05);
  }

  .btc-address:hover {
    color: #F7931A;
    background: rgba(247, 147, 26, 0.1);
  }

  .btc-address.copied {
    color: #00E676;
    background: rgba(0, 230, 118, 0.1);
  }

  .nostr-address {
    text-align: center;
    margin-top: 0.25rem;
  }

  .nostr-text {
    font-family: var(--font-mono);
    color: #aaa; /* Light gray color */
    font-size: 0.5rem;
    display: inline-block;
  }

  @media (min-width: 768px) {
    .logo {
      max-height: 300px;
      max-width: min(95%, 800px);
    }

    .btc-address {
      font-size: 0.9rem;
      padding: 0.5rem 1rem;
    }

    .donation-address {
      padding: var(--spacing-sm) var(--spacing-lg);
    }
  }

  @media (min-width: 1024px) {
    .logo {
      max-height: 200px;
      max-width: min(95%, 500px);
    }
  }

  @media (min-width: 1200px) {
    .logo {
      max-height: 240px;
      max-width: min(95%, 600px);
    }

    .logo-container {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 0;
    }

    .donation-address {
      margin-top: var(--spacing-sm);
      margin-left: 0;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .logo-link,
    .btc-address {
      transition: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const btcAddress = document.getElementById('btc-address');
    
    if (btcAddress) {
      btcAddress.addEventListener('click', async function() {
        const address = 'bc1qprx3e7uschjqzr5adxx85z8um8pjlqy92gqq9l';
        
        try {
          // Use modern clipboard API if available
          if (navigator.clipboard && window.isSecureContext) {
            await navigator.clipboard.writeText(address);
          } else {
            // Fallback for older browsers
            const textArea = document.createElement('textarea');
            textArea.value = address;
            textArea.style.position = 'fixed';
            textArea.style.left = '-999999px';
            textArea.style.top = '-999999px';
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            document.execCommand('copy');
            textArea.remove();
          }
          
          // Visual feedback
          btcAddress.classList.add('copied');
          btcAddress.title = 'Copied to clipboard!';
          
          // Reset after 2 seconds
          setTimeout(() => {
            btcAddress.classList.remove('copied');
            btcAddress.title = 'Click to copy Bitcoin address';
          }, 2000);
          
        } catch (error) {
          console.error('Failed to copy address:', error);
          btcAddress.title = 'Copy failed - please select and copy manually';
        }
      });
    }
  });
</script>
